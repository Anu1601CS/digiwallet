{"version":3,"sources":["webpack:///./src/app/wallet/wallet.module.ts","webpack:///./src/app/wallet/wallet.page.html","webpack:///./src/app/wallet/wallet.page.scss","webpack:///./src/app/wallet/wallet.page.ts"],"names":[],"mappings":"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","file":"wallet-wallet-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { WalletPage } from './wallet.page';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: WalletPage\n  },\n  { path: 'new-wallet',\n   loadChildren: './new-wallet/new-wallet.module#NewWalletPageModule'\n  },\n  {\n     path: 'wallet-details/:Id',\n     loadChildren: './wallet-details/wallet-details.module#WalletDetailsPageModule'\n   },\n\n\n];\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [WalletPage]\n})\nexport class WalletPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\" >\\n      <ion-buttons slot=\\\"start\\\">\\n          <ion-menu-button ></ion-menu-button>\\n        </ion-buttons>\\n    <ion-title ><b>Your Wallets</b></ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n          <ion-button [routerLink]=\\\"['/wallet','new-wallet']\\\" >\\n            <ion-icon slot=\\\"icon-only\\\" name=\\\"add\\\"></ion-icon>\\n          </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <ion-grid no-padding>\\n        <ion-row >\\n          <ion-col size=\\\"12\\\" size-sm=\\\"8\\\" offsetSm=\\\"2\\\" >\\n            <ion-card >\\n              <ion-card-header>\\n                <ion-card-title><b>{{wallets[0].title}}</b></ion-card-title>\\n                <ion-card-subtitle>{{wallets[0].balance}} eth</ion-card-subtitle>\\n              </ion-card-header>\\n              <ion-img [src]=\\\"wallets[0].imageUrl\\\"></ion-img>\\n              <ion-card-content>\\n                <p>{{wallets[0].description}}</p>\\n              </ion-card-content>\\n              <div text-right >\\n                <ion-button fill=\\\"outline\\\" color=\\\"primary\\\" style=\\\"margin: 8px\\\" [routerLink]=\\\"['/','wallet','wallet-details',wallets[0].id]\\\"> Actions</ion-button>\\n              </div>\\n            </ion-card>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row >\\n            <ion-col  size=\\\"12\\\" size-sm=\\\"8\\\" offsetSm=\\\"2\\\" >\\n              <ion-list >\\n                <ion-item-sliding *ngFor=\\\"let wallet of wallets.slice(1)\\\" #sliding>\\n                    <ion-item  detail button [routerLink]=\\\"['/','wallet','wallet-details',wallet.id]\\\">\\n                      <ion-avatar slot=\\\"start\\\">\\n                          <img [src]=\\\"wallet.imageUrl\\\" >\\n                      </ion-avatar>\\n                        <ion-label>\\n                          <h2 ><b>{{wallet.Name}}</b></h2>\\n                          <p>{{wallet.balance}}  units</p>\\n                        </ion-label> \\n                  </ion-item>\\n                  <ion-item-options >\\n                      <ion-item-option color=\\\"danger\\\" (click)=\\\"onSlide(wallet.id, sliding) \\\" >\\n                        Remove\\n                      </ion-item-option>\\n                  </ion-item-options>\\n                </ion-item-sliding>\\n              </ion-list>           \\n            </ion-col>\\n          </ion-row>\\n      </ion-grid>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dhbGxldC93YWxsZXQucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Wallet } from '../models/wallet.model';\nimport { IonItemSliding } from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { EthereumService } from '../services/ethereum.service';\n\n@Component({\n  selector: 'app-wallet',\n  templateUrl: './wallet.page.html',\n  styleUrls: ['./wallet.page.scss']\n})\nexport class WalletPage implements OnInit {\n  balance;\n  wallet: Wallet;\n\n  wallets: Wallet[];\n  constructor(\n    public eth: EthereumService,\n    private auth: AuthService,\n    private route: Router\n  ) {}\n\n  async getBalance() {\n    this.balance = await this.eth.balance(\n      this.auth.presentUser.wallets[0].address\n    );\n    console.log(this.balance);\n    this.auth.presentUser.wallets[0].balance =\n      this.balance / 1000000000000000000;\n    this.auth.updateUser();\n  }\n\n  async getBalanceOf(id) {\n    this.wallet = this.auth.presentUser.wallets.find(data => data.id == id);\n    this.balance = await this.eth.balanceOf(\n      this.auth.presentUser.wallets[0].address,\n      this.wallet.address\n    );\n    console.log(this.balance);\n    this.auth.presentUser.wallets.find(data => data.id == id).balance =\n      this.balance / 1e18;\n    this.auth.updateUser();\n  }\n  ngOnInit() {\n    this.wallets = this.auth.presentUser.wallets;\n  }\n\n  ionViewWillEnter() {\n    this.wallets = this.auth.presentUser.wallets;\n    this.getBalance();\n\n    let i = 1;\n    for (i = 1; i < this.wallets.length; i++) {\n      this.getBalanceOf(i);\n    }\n  }\n\n  onSlide(id, sliding: IonItemSliding) {\n    const index = this.auth.presentUser.wallets.findIndex(\n      data => data.id === id\n    );\n    this.auth.presentUser.wallets.splice(index, 1);\n    this.auth.updateUser();\n    sliding.close();\n  }\n\n  onClick() {}\n}\n"],"sourceRoot":""}