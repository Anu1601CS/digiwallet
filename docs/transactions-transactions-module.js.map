{"version":3,"sources":["webpack:///./src/app/transactions/transactions.module.ts","webpack:///./src/app/transactions/transactions.page.html","webpack:///./src/app/transactions/transactions.page.scss","webpack:///./src/app/transactions/transactions.page.ts"],"names":[],"mappings":"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","file":"transactions-transactions-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TransactionsPage } from './transactions.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TransactionsPage\n  },\n  {\n    path: 'transaction-details/:Id',\n    loadChildren: './transaction-details/transaction-details.module#TransactionDetailsPageModule'\n  }\n\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [TransactionsPage]\n})\nexport class TransactionsPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n      <ion-buttons slot=\\\"start\\\">\\n          <ion-menu-button ></ion-menu-button>\\n        </ion-buttons>\\n    <ion-title>transactions</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-card  *ngFor=\\\"let trans of transactions.slice().reverse()\\\" [routerLink]=\\\"['/transactions','transaction-details',trans.id]\\\" routerLinkActive=\\\"router-link-active\\\" >\\n    <ion-card-content>\\n      <ion-grid fixed>\\n        <ion-row>\\n            <ion-col text-right >\\n                <h5><b>{{trans.status}}</b></h5>\\n            </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col >\\n              <ion-thumbnail>\\n                  <img [src]=\\\"trans.imageUrl\\\" />\\n              </ion-thumbnail>\\n          </ion-col>\\n          \\n          <ion-col text-center >\\n              <h1><b> From:</b></h1>\\n              <p>{{trans.from}}</p>\\n          </ion-col>\\n          <ion-col text-center>\\n              <h1><b>To :</b></h1>\\n              <p>{{trans.to}}</p>\\n          </ion-col>\\n        \\n          \\n          <ion-col text-right >\\n              <h1 style=\\\"color: green\\\"><b>{{trans.amount}}</b></h1>\\n              <p color=\\\"success\\\">units</p>\\n          </ion-col>\\n          \\n        </ion-row>\\n        \\n      </ion-grid>\\n    </ion-card-content>\\n  </ion-card>\\n  <ion-card>\\n    \\n    <ion-card-content class=\\\"ion-text-center\\\">\\n      <b>No more transactions</b>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RyYW5zYWN0aW9ucy90cmFuc2FjdGlvbnMucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Transaction } from '../models/transaction.model';\nimport { AuthService } from '../services/auth.service';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-transactions',\n  templateUrl: './transactions.page.html',\n  styleUrls: ['./transactions.page.scss'],\n})\nexport class TransactionsPage implements OnInit {\n\n  transactions: Transaction[];\n  constructor(private auth: AuthService,  public http: HttpClient) { }\n\n  ngOnInit() {\n    this.transactions = this.auth.presentUser.Transactions;\n  }\n  ionViewWillEnter() {\n    this.transactions = this.auth.presentUser.Transactions;\n    for ( let trans of this.transactions)\n    {\n      this.updateStatus(trans.id);\n    }\n   }\n\n\n   updateStatus(id)\n   {\n      if (this.transactions[id].status == 'Success' || this.transactions[id].status == 'Fail') {\n        return;\n      }\n      this.http.get(\n        'https://api-ropsten.etherscan.io/api?module=transaction&action=gettxreceiptstatus&txhash='\n         + this.transactions[id].hash +\n        // + '0x0c94fafb6e98d74a445fb35fb52e7393102d47bfe2f1ab96196bd8afb3f66e8c' +\n        '&apikey=2QVHR492AKS9PD313RFHADJ497CVT8NQMQ' ).subscribe((res) => {\n          if(res['result']['status'] === '1') {\n            this.transactions[id].status = 'Success';\n            console.log('success');\n          } else if(res['result']['status'] === '0') {\n            this.transactions[id].status = 'Fail';\n            console.log('Fail');\n          }else if(res['result']['status'] === '') {\n            this.transactions[id].status = 'Pending';\n            console.log('pending');\n          } else {\n            this.transactions[id].status = res['result']['status'];\n            console.log('Fail');\n          }\n        });\n     }\n}\n"],"sourceRoot":""}